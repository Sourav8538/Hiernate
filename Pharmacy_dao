package Pharmacy_dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.persistence.Query;

import dto.Pharmacy_dto;

public class Dao {
   public void insert(Pharmacy_dto dto)
   {
	  EntityManagerFactory entityManagerFactory= Persistence.createEntityManagerFactory("dev");
	EntityManager entityManager  =entityManagerFactory.createEntityManager();
	EntityTransaction entityTransaction=entityManager.getTransaction();
	entityTransaction.begin();
	entityManager.persist(dto);
	entityTransaction.commit();
   }
   public void updateByid(Pharmacy_dto dto)
   {
	  EntityManagerFactory emf=Persistence.createEntityManagerFactory("dev");
	 EntityManager em=emf.createEntityManager();
	EntityTransaction et =em.getTransaction();
	et.begin();
	em.merge(dto);
	et.commit();
	   
   }
   public void ReadByid(int id)
   {
	  EntityManagerFactory emf=Persistence.createEntityManagerFactory("dev");
	 EntityManager em=emf.createEntityManager();
	EntityTransaction et =em.getTransaction();
	  Pharmacy_dto medicine=em.find(Pharmacy_dto.class, id);
	  System.out.println("Medcine_name :"+medicine.getMedicine_id()+"  "+"Medicine Name: "
	  +medicine.getMedicine_name()+" "+"Medicine Brand :"+" "+" "+medicine.getBrand_name()+" "+" Medicine Price :"+medicine.getMedicine_price());
	   
   }
   public void readAll()
   {
	   EntityManagerFactory emf=Persistence.createEntityManagerFactory("dev");
		 EntityManager em=emf.createEntityManager();
Query query=em.createQuery("select x from Pharmacy_dto x");
List<Pharmacy_dto> l1=query.getResultList();
for (Pharmacy_dto pharmacy_dto : l1) {
	System.out.println(pharmacy_dto.getMedicine_id()+" "+pharmacy_dto.getMedicine_name()+" "+pharmacy_dto.getBrand_name()+" "+pharmacy_dto.getMedicine_price());
}
   }
   public void deleteByid( int Did)
   {
	  EntityManagerFactory emf=Persistence.createEntityManagerFactory("dev");
	 EntityManager em=emf.createEntityManager();
	EntityTransaction et =em.getTransaction();
	Pharmacy_dto dto=em.find(Pharmacy_dto.class, Did);
	et.begin();
	em.remove(dto);
	et.commit();
	   
   }
   
   public void deleteAll( )
   {
	  EntityManagerFactory emf=Persistence.createEntityManagerFactory("dev");
	 EntityManager em=emf.createEntityManager();
	EntityTransaction et =em.getTransaction();
Query query =	em.createQuery("Delete from Pharmacy_dto");
	
	et.begin();
     query.executeUpdate();
	et.commit();
	   
   }
   
   
}
